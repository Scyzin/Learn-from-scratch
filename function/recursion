#递归函数
#抵用递归函数计算阶乘
# N! = 1 * 2 * 3 * ... * N
def fact(n):
    if n ==1:
        return 1
    return n * fact(n-1)
print('fact(1) =', fact(1))
print('fact(5) =', fact(5))
#   fact(1000)，递归函数，栈(stack)会溢出。

#   通过尾递归优化，解决溢出。
def fac(n):
    return fac_iter(n,1)
def fac_iter(num,product):
    if num ==1:
        return product
    return fac_iter(num-1,num*product)

#利用递归函数移动汉诺塔：
def move(n,a,b,c):
    if n==1:
        print('move',a,'-->',c)
    else:
        move(n-1, a, c, b)
        move(1, a, b, c)
        move(n-1, b, a, c)
move(4, 'A', 'B', 'C')
